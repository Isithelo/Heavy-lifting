    <div class="row">
      <div class="col-md-10">
        <h1>Assemblies</h1>
        <p>Combine database items and components into assemblies. Analyze and create reports on these assemblies with the report section.</p>
      </div>
      {{>tools}}
    </div> 
    <hr>
<div class="row" id="overall">
<div class="col-md-4" id="navMenuPanel" style="min-height: 450px">       
    <div id="myProgress">
      <div id="myBar">
      </div>
    </div>
    <h5><strong>Navigation</strong> <small>  Use the navigation tree to interact with the database.</small><div style="text-align: right;position: absolute;right: 14px;top:0px" id="treeNavEdit" ></div> </h5>
    <div class=" ">
     <div style="padding-bottom:15px;padding-bottom:15px">
      <input id="search_field" name="searchinput" type="search" placeholder="Search Navigation" class="form-control input-md">      
    </div>
    <div id="jstree"><pre><i class="fa fa-spinner fa-spin fa-fw"></i><span class=" ">Loading...</span></pre></div> 
        <div style="text-align: center">
      <p><small id="jstreecount"></small> Navigation Items</p>  
    </div>
  </div>
  <div id="menuItems"></div>
</div>  
<div class="col-md-8" id="browserArea">
  <div id="panel">  
<div class="well"><div style=" padding: 5px"><div style="padding:25px"><h3>Heads up! <small>Click on the nodes of the navigation tree to interact with the site.</small></h3><div style="text-align: center"><p>To get started view the <a href="/documentation">Documentation section</a> on this site or sign in / sign up.</p></div> </div></div></div>
  </div>
</div>
</div>


  

  <script type="text/javascript">
  //The route defines the plugin to use when posting , getting and loading.
 
  var databaseid = {{{items}}};
  var Formids = {{{Formids}}};
  var navmenuHeadings = ['detail','description','icon','buttons','tabs','parent','template']
  var databaseMenu = []
  var temp =[]

/////////////////////////////
////     DEBUG AREA     //// 
///////////////////////////
console.log( 'Tempalte Name : /node_modules/heavylifting/views/assemblies' )
console.log( '-------------------------' )
console.log( 'databaseid : ',databaseid )
console.log( 'Formids : ',Formids )
console.log( 'navmenuHeadings : ',navmenuHeadings )
console.log( 'databaseMenu : ',databaseMenu )
console.log( 'temp : ',temp )
console.log( '-------------------------' )
console.log( 'Tempalte Name : /node_modules/heavylifting/views/assemblies' )




/////////////////////////////////// 
//////  GET JSTREE BY ID    //////
///////////////////////////////// 
function jstreeGet(ids){
  jQuery.ajax({
    'url': '/assemblies/jstree?ids='+ids,
    'async': true,
    'global': false,
    'success': function (dataSchemaObject) {
      var dataSchemaObject = JSON.parse(dataSchemaObject)
 

if (dataSchemaObject.thisitem.length==0) {
  $('#overall').html('<div style="text-align:center;padding-top:25px;padding-bottom:25px"><a class="btn btn-primary" href="#" id="parentraw" onclick="newMenuItemAssy(databaseid)" data-toggle="modal" data-target="#myModal" title="Create new assembly"><i class="far fa-plus-square"></i>  Create new assembly</a></div>')

} else {
  //Add the headings to the page.
      $('#descriptions').html(dataSchemaObject.thisitem[0].name)
      $('#details').html(dataSchemaObject.thisitem[0].detail)
      $('#panel').html('')
      var dataSchemaObject1 = fitstFormat(dataSchemaObject.children)
      //manipulate data to work with the jstree
      var jsTreeData = dataJStreeConvert (dataSchemaObject1)
      var location = 'jstree'
      $('#panel').html('<div class="well"><div style=" padding: 5px"><div style="padding:25px"><h3>Heads up! <small>Click on the nodes of the navigation tree to interact with the site.</small></h3><div style="text-align: center"><p>To get started view the <a href="/documentation">Documentation section</a> on this site or sign in / sign up.</p></div> </div></div></div>')
      //change the primary page id variable , used for the parent
      databaseid = ids
      loadNavMenu(location,jsTreeData)
}

      
    }
  });
}

function fitstFormat(databaseMenu){
  var temp =[]
    //This is where the id is injected into the menu item . Crude hacky work around , not sure how to improve.
    for (var i = 0; i < databaseMenu.length; i++) {
      //the add the id to the array going into the menu .
      if (databaseMenu[i]['elementID'] == "") {
        databaseMenu[i].entry.id = databaseMenu[i]['_id']
      }else{
        databaseMenu[i].entry.id = databaseMenu[i]['elementID']
      }
      temp.push(databaseMenu[i].entry)
    }
    databaseMenu = temp
    return databaseMenu
  }

///////////////////////////// 
//////  INITIALISE    //////
/////////////////////////// 
$( document ).ready(function() {
  pageNavEdit(databaseid)
  jstreeGet(databaseid)
});

/////////////////////////////////////////
//////  DATACONVERT FOR JSTREE    //////
/////////////////////////////////////// 
function dataJStreeConvert (databaseMenu){
  var newData = []
  for (var i = 0; i < databaseMenu.length; i++) {
    var temp = {}
    for (key in databaseMenu[i]){
      switch (true){
        case (key == 'id'):
        temp['id'] =  databaseMenu[i][key]
        if (databaseMenu[i][key]=='5848fc75b622bb53eca6ffd7') {
          state = {
              "opened" : true,  // is the node open
            }
            temp['state'] = state
          }
          break;
          case (key == 'parent'):
          temp['parent'] = databaseMenu[i][key]
          break;
          case (key == 'description'):
          temp['text'] = databaseMenu[i][key]
          break;
          case (key == 'icon'):
          temp['icon'] = databaseMenu[i][key]
          break;
          case (key == 'template'):
          aclass = { 
            "data-template" : databaseMenu[i][key],
          }
          temp['a_attr'] =  aclass
          break;
          case (key == 'field'):
          aclass = { 
            "data-field" : databaseMenu[i][key],
          }
          temp['a_attr'] =  aclass
          break;          
        }
      }
      newData.push(temp)
    }
//error trap the menu.
for (var i = 0; i < newData.length; i++) {
  if (!newData[i].parent) {
    newData[i].parent = '#'
  }
}
sortResults(newData,'text', true);
return newData
}

////////////////////////////////////////////////
////////   CUSTOM JSON SORTING FUNCTION ///////
//////////////////////////////////////////////
function sortResults(json , prop, asc) {
  json = json.sort(function(a, b) {
    if (asc) {
      return (a[prop] > b[prop]) ? 1 : ((a[prop] < b[prop]) ? -1 : 0);
    } else {
      return (b[prop] > a[prop]) ? 1 : ((b[prop] < a[prop]) ? -1 : 0);
    }
  });
  return json;
}

////////////////////////////////////////////////
////////    LOAD NAV TREE INTO MEMORY   ///////
//////////////////////////////////////////////
function loadNavMenu(location,dataNav){
  //console.log(dataNav)
  //Destory the tree if it exists
  if (jQuery('#'+location).jstree("destroy")) {
    jQuery('#'+location).jstree("destroy");
  }
  var $root =jQuery('#'+location).jstree({ 
    'core' : {
      'data' : dataNav,        
      'themes': {
        'name': 'proton',
        'responsive': true,
        'stripes' : false,
      },
    } ,
    "checkbox" : {
      "keep_selected_style" : false
    },
    "multiple": false,
    "plugins" : [   "search" , "state"]
  });

  $('#jstreecount').html(dataNav.length)

/////////////////////////////////
////////  SEARCH NAV MENU ///////
/////////////////////////////////
var to = false;
jQuery('#search_field').keyup(function () {
  if(to) { clearTimeout(to); }
  to = setTimeout(function () {
    var v = jQuery('#search_field').val();
    jQuery('#'+location).jstree(true).search(v);
  }, 250);
});

//////////////////////////////////////////////////
////////  EVENT LISTNER ON THE TREE VIEW  ///////
////////////////////////////////////////////////
jQuery('#'+location)
    // listen for event
    .on('changed.jstree', function (e, dataTree) {
      var i, j, r = []
      for(i = 0, j = dataTree.selected.length; i < j; i++) {
        var ids=(dataTree.instance.get_node(dataTree.selected[0]).id);
        //keep useful code snippet , however no longer required.
        var template=(dataTree.instance.get_node(dataTree.selected[0]).a_attr['data-template']);
        var field=(dataTree.instance.get_node(dataTree.selected[0]).a_attr['data-field']);
        r.push(dataTree.instance.get_node(dataTree.selected[i]).template);
      }
      if (field) {
        templateloading(field)
      }else{
        templateloading(ids)
      }
    })

//////////////////////////////////////////////
////////    BUTTON CLICK OPEN FORM  /////////
////////////////////////////////////////////
$('#newMenuItem').click(function(){
  //var temp = jQuery('#'+location).jstree("get_selected",true)
  //console.log(temp[0].id)
  newMenuItemsAssemblies(Formids,'','use',databaseid,'',navmenuHeadings)
})
console.log( 'Tempalte Name : /node_modules/heavylifting/views/assemblies' )
console.log('---------------------------')
console.log(' databaseid :', databaseid )
console.log(' Formids :', Formids )
console.log(' navmenuHeadings :', navmenuHeadings )
console.log(' databaseMenu :', databaseMenu )
console.log(' temp :', temp )
console.log('---------------------------')
console.log( 'Tempalte Name : /node_modules/heavylifting/views/assemblies' )
//Expand and Collapse all buttons.
var html = '<p></p><div style="text-align:center;position:absolute;top:75px;right:15px"><button id="expandBtn" class="btn btn-default btn-xs"><i class="far fa-plus-square"></i></button><button id="collapseBtn" class="btn btn-default btn-xs"><i class="far fa-minus-square"></i></button></div>'
$('#menuItems').append(html)
jQuery('#expandBtn').click(function () {
 jQuery('#'+location).jstree('open_all');
});
jQuery('#collapseBtn').click(function () {
 jQuery('#'+location).jstree('close_all');
});
//Expand and Collapse all buttons.
}

///////////////////////////////////////////////////////
////////  EVENT LISTNER FUNCTION AREA DATABASE ///////
/////////////////////////////////////////////////////
function templateloading(ids){
//Ensure that the first load error is covered , also any other errors.
if(ids){
  jQuery.ajax({
   'async': true,
   'global': false,
   'url': '/assemblies/assemblyload?ids='+ids,
   'success': function (dataSchemaObject) {
      jQuery('#panel').html("")
      jQuery('#panel').html(dataSchemaObject)
      treeNavEdit("treeNavEdit")
   }
 });
}
}

//////////////////////////////////////
////////    PROGRESS BAR    /////////
////////////////////////////////////
function move() {
  var elem = document.getElementById("myBar");   
  elem.style.height = '5px'; 
  elem.style.background = '#4c8ffd'; 
  var width = 10;
  var id = setInterval(frame, 1);
  function frame() {
    if (width >= 100) {
      clearInterval(id);
      collapse()
    } else {
      width++; 
      elem.style.width = width + '%'; 
    }
  }
}

function collapse() {
  var elem = document.getElementById("myBar");   
  elem.style.background = 'white'; 
}

//////////////////////////////////////
////////    GET FORM BY ID  /////////
////////////////////////////////////
function newMenuItemsAssemblies(formdata,idItem,raw,parentid,injectParentid,headings){
  //console.log(formdata,idItem,raw,parentid,injectParentid,headings)
  var headings = JSON.stringify(headings)
  jQuery.ajax({
    'url': '/'+route+'/getform?formdata='+formdata+'&idItem='+idItem+'&raw='+raw+'&parentid='+parentid+'&headings='+headings,
    'async': true,
    'global': false,
    'success': function (dataSchemaObject) {
      $('#formAreaModal').html(dataSchemaObject)
    }
  });
}

///////////////////////////////////////////////////////
////////    GET NEW RAW FORM FOR BLANK MENU  /////////
/////////////////////////////////////////////////////
function newMenuItemsBlank(formdata,idItem,raw,parentid,injectParentid,headings){
  //console.log(formdata,idItem,raw,parentid,injectParentid,headings,'trace')
  var headings = JSON.stringify(headings)
  jQuery.ajax({
    'url': '/'+route+'/getform?formdata='+formdata+'&idItem='+idItem+'&raw='+raw+'&parentid='+parentid+'&headings='+headings,
    'async': true,
    'global': false,
    'success': function (dataSchemaObject) {
      $('#formAreaModal').html(dataSchemaObject)
    }
  });

 

}

///////////////////////////////////////////////////////
////////    GET NEW RAW FORM FOR BLANK MENU  /////////
/////////////////////////////////////////////////////
function newMenuItemAssy(parentid){
  newMenuItemsBlank('59e83513e0f9501550e9cf80','','use','59e83513e0f9501550e9cf80','','')
}


</script>

