


<div class="btn-group" role="group" aria-label="..." style="padding-bottom: 15px">
  <button type="button" class="btn btn-default" id="changeButton" onclick="deployForm(this.id)" data-toggle="modal" data-target="#myModal"><i class="fa fa-plus" aria-hidden="true"></i></button> 
</div>
<div class="btn-group" role="group" aria-label="..." style="padding-bottom: 15px">
  <label class="checkbox-inline">
    <input type="checkbox" id="toggle-one"   data-toggle="toggle" data-on='<span class="glyphicon glyphicon-time" aria-hidden="true"></span> ' data-off='<span class="glyphicon glyphicon-time" aria-hidden="true"></span>'  data-onstyle="default"> Revision History
  </label>
</div>
<p>
</p>
<div id='formDelivery'></div>
 
<script type="text/javascript">
var tablelistdata = {{{databaseitems}}};
var items = {{{menuitem}}}
var formids = create_uid()
var templateload = {{{templateload}}}
 

/////////////////////////////
////     DEBUG AREA     //// 
///////////////////////////
console.log( 'databasetablelist loading' )
console.log( '-------------------------' )
console.log( 'tablelistdata : ',tablelistdata )
console.log( 'items : ',items )
console.log( 'formids : ',formids )
console.log( 'templateload : ',templateload )
console.log( '-------------------------' )
console.log( 'databasetablelist loading' )


///////////////////////////////////////////////////
////        REQUIRED FORMATING OF DATA        //// 
/////////////////////////////////////////////////
var temp = []
  //This is where the id is injected into the menu item . Crude hacky work around , not sure how to improve.
  for (var i = 0; i < tablelistdata.length; i++) {
 
      //the add the id to the array going into the menu .
      if (tablelistdata[i]['elementID'] == "") {
        tablelistdata[i].entry.id = tablelistdata[i]['_id']
      }else{
        tablelistdata[i].entry.id = tablelistdata[i]['elementID']
      }
    tablelistdata[i].entry.name = tablelistdata[i]['name']
    tablelistdata[i].entry.childType = tablelistdata[i]['childType']
    tablelistdata[i].entry.name = tablelistdata[i]['name']
   // tablelistdata[i].entry.detail1 = tablelistdata[i]['detail']
    tablelistdata[i].entry.userID = tablelistdata[i]['userID']
    tablelistdata[i].entry.parentid = tablelistdata[i]['parentid']
    temp.push(tablelistdata[i].entry)
  }
  tablelistdata = temp
 
 

//////////////////////////////////////////
////        CREATE UNIQUE ID         //// 
////////////////////////////////////////
function create_uid() {
  function s4() {
    return Math.floor((1 + Math.random()) * 0x10000)
      .toString(16)
      .substring(1);
  }
  return s4() + s4() + '-' + s4() + '-' + s4() + '-' +
    s4() + '-' + s4() + s4() + s4();
}

///////////////////////////////////////////////
////  MODIFY THE IDS OF RELEVANT ITEMS    //// 
/////////////////////////////////////////////
$('#changeButton').attr('id', items.childType);
jQuery('#formDelivery').attr("id",formids);
jQuery('#toggle-one').attr("id",formids+'_toggle');

//////////////////////////////////////////
////        INIT TOGGLE BUTTON       //// 
////////////////////////////////////////
$('#'+formids+'_toggle').bootstrapToggle();

/////////////////////////////////////////////////////////////////////////////
////////  EVENT LISTNER ON THE TOOGGLE FOR REMOVING THE COMPONETNS   ///////
///////////////////////////////////////////////////////////////////////////
$('#'+formids+'_toggle').change(function() {
  //This function is defined in the component navigation template.
  getCollectionData(objectType,$(this).prop('checked'))
})

///////////////////////////// 
//////  INITIALISE    //////
/////////////////////////// 
$('document').ready(function(){
 datableload(tablelistdata)
})

///////////////////////////////
//////  LOAD THE TABLE  //////
/////////////////////////////
function datableload(tablelistdata) {
  
if (items.entry.headings) {


  var tableHeadings = items.entry.headings
if (tableHeadings[1]) {
  tableHeadings = [tableHeadings]
  console.log(tableHeadings,'th')
}
console.log(tableHeadings)

} else {
  var tableHeadings = ['name','detail','userID','id','parentid','childType','description']
}

 

    var tempVarIDs = formids+'tableloadID'
    //inject the ID html table into the page.
    $('#'+formids).html('<table id="'+tempVarIDs+'" class="table table-bordered table-compressed table-hover" cellspacing="0" width="100%"></table>')
    //error message text
    var html = ''
    html += '<div class="alert alert-danger" role="alert"> '
    html += '<strong>'
    html += 'Oh snap!'
    html += '</strong> '
    html += 'Table error , No data found , Please let us know about this.'
    html += '</div>'
//client side error check for the tables.
if (tablelistdata !== null) {
  if (tablelistdata.length !== 0) {
    dataTableLoad (tablelistdata,tempVarIDs,tableHeadings)
    loadDataTable(tempVarIDs)
  } else {
    $('#'+formids).html(html)
  }
} else {
  $('#'+formids).html(html)
}
};


function loadDataTable(id){

//the use of var here is critical , each instantiate needs to be unique.
  var table = jQuery('#'+id).DataTable({
    'destroy':true,
    "pagingType": "numbers",
  //  'order': [[ 2, 'asc' ]] ,
  });

  //Add event listener for opening and closing details
  jQuery('#'+id +' tbody').on('click', 'td.details-control', function () {
      var tr = jQuery(this).closest('tr');
      var row = table.row( tr );
      if ( row.child.isShown() ) {
            // This row is already open - close it
            row.child.hide();//////////////////////////////////////
            tr.removeClass('shown');
          }
          else {
            // Open this row
            //it is async , and the canvas is not rendered 
            row.child(formatDefault(this.id))
            row.child.show();
            tr.addClass('shown');

            // Warning Duplicate IDs
            $('[id]').each(function(){
              var ids = $('[id="'+this.id+'"]');
              if(ids.length>1 && ids[0]==this){
                 $( this ).css( "color", "red" )
                 $( this ).css( "background", "green" )
                console.warn('Multiple IDs #'+this.id);
              }
            });

          }
  });



}



////////////////////////////////////////////////////////////////////
////////////        FORMIDsABLE VIEW EXTRA DETAIL         ///////////
///////////////////////////////////////////////////////////////////
function formatDefault ( d ) {


  // `d` is the original data object for the row
  var html=''
  html='<h4>Options</h4>'
  html += '<div id="'+d+'_content" style="padding-top:0px;text-align:left">'
  html += '<div class="btn-group" role="group" aria-label="..." style="padding-bottom:15px">'
  html += '<button type="button" class="btn btn-default" id="'+d+'_use" onclick="useForm(this.id)"  data-toggle="modal" data-target="#myModal" data-toggle="tooltip" data-placement="top" title="Edit ths item.">Use Form</button>'
  html += '<button type="button" class="btn btn-default" id="'+d+'_read" onclick="modifyItem(this.id)"  data-toggle="modal" data-target="#myModal" data-toggle="tooltip" data-placement="top" title="Edit ths item.">Modify</button>'

  html += '<button type="button" class="btn btn-default" id="'+d+'raw" onclick="raw(this.id)"  data-toggle="modal" data-target="#myModal" data-toggle="tooltip" data-placement="top" title="Edit ths item.">Raw</button>'  

  html += '<button type="button" class="btn btn-danger" data-_id="'+d+'" id="'+d+'_del" data-toggle="modal" data-target="#myModal" onclick="deleteEntry(this.id)"  data-toggle="tooltip" data-placement="top" title="Delete this item"><span class="glyphicon glyphicon-trash" aria-hidden="true"></span></button>'
  html += '</div>'
  html += '<div class="btn-group" role="group" aria-label="..." style="padding-bottom:15px;padding-left:15px">'
  html += '<button type="button" class="btn btn-default"  id="'+d+'_comp" onclick="createComp(this.id)"  data-toggle="modal" data-target="#myModal" data-toggle="tooltip" data-placement="top" title="Create child item.">Create component</button>'
  html += '</div>'
  html += '</div>'
  html += '<div id="'+d+'_loadingArea" ></div>'
  


  return html;
}

///////////////////////////////// 
//////  DELETE CONVEYOR  ///////
/////////////////////////////// 
function deleteEntry(id){
  id = id.replace('_del', '');  
 _id = $( "#"+id ).data( "_id" )  
 html = ''
 html +='<div class="row" style="width:100%;text-align:center">'
 html +='<i class="fa fa-question-circle fa-4x" aria-hidden="true" ></i>'
 html += '<h3>Are you sure you what to do this ?</h3>'
 html += '<p>This action cannot be undone.</p>'
 html +='<div class="btn-group" role="group" aria-label="..." style="align:center">'
 html +='  <button type="button" class="btn btn-danger" onclick="deleteEntrys('
 html +="'"
 html +=_id
 html +="'"
 html +=')">Confirm</button>'
 html +='</div>'
 $('#formRenders').html(html)
}

function deleteEntrys(_id){
  //always create at the selected node
  var json = {
    '_id' : _id,
  }
  jQuery.ajax({
    'url': '/deleteDbentry',
    'type': 'POST', 
    'contentType': 'application/json', 
    'data': JSON.stringify(json),
    'success': function ( ) {
     window.location = '/database'
   }  
 })
}

function loadDetail(id){
  var html = '<div style="text-align:center">'
  html += '<i class="fa fa-spinner fa-pulse fa-3x fa-fw"></i>'
  html+='<span class="sr-only">Loading...</span>'
  html += '</div>'
  $('#'+id+'_loadingArea').html(html)
/*
  jQuery.ajax({
    'async': true,
    'global': false,
    'url': '/getlongdata?data='+id,
    'success': function (dataSchemaObject) {
      $('#'+id+'_loadingArea').html(dataSchemaObject)
    }
  });
*/
}

////////////////////////////
////////    READ  /////////
///////////////////////////
function dataTableLoad (data,id,headings){
  html = ''
  html += '<thead><tr><th  style="width:1px"></th>'
  for (var i = 0; i < headings.length; i++) {
    html += '<th>'
    html+=headings[i]
    html += '</th>'
  }
  html += '</tr></thead>'
  html += '<tbody>'
  for (var i = 0; i < data.length; i++) {
     
    html += '<tr><td class="details-control" style="text-align:center;vertical-align:middle; " id="'+data[i]['id']+'" data-parentid="'+data[i]['parentid']+'" data-childType="'+data[i]['childType']+'"><i class="fa fa-plus-square-o" aria-hidden="true" ></i></td>'
    for (var j = 0; j < headings.length; j++) {
      html += '<td style=" vertical-align:middle">'
      html += data[i][headings[j]]
      html += '</td>'
    }
    html += '</tr>'
  }
  html += '<tbody>'
  $('#'+id).html(html)
} 

//////////////////////////////////////////////
////////    BUTTON CLICK OPEN FORM  /////////
////////////////////////////////////////////
function deployForm(parentid){
  //This is hard wired , and likely to cause issues.
  loadformModal(parentid,'','use',templateload)
}

//////////////////////////////////////
////////    GET FORM BY ID  /////////
////////////////////////////////////                                                                                                              
function loadformModal(formdata,idItem,raw,parentid){
  jQuery.ajax({
    'url': '/getform?formdata='+formdata+'&idItem='+idItem+'&raw='+raw+'&parentid='+parentid,
    'async': true,
    'global': false,
    'success': function (dataSchemaObject) {
      $('#formAreaModal').html(dataSchemaObject)
    }
  });
}

//////////////////////////
//////  USE        //////
////////////////////////
function useForm(id){
  id = id.replace('_use', '');
  loadformModal(id,'','use',id)
}

//////////////////////////
//////  MODIFY     //////
////////////////////////
function modifyItem(id){
  id = id.replace('_read', '');
  childType = $('#'+id+'').data('childtype')
  //Used for the check self when modifiing.
  if (!childType) {
    loadformModal(id,id,'self',id)
  } else {
    loadformModal(childType,id,'self',id)
  }
}

//////////////////////////
//////  MODIFY     //////
////////////////////////
function raw(id){
  id = id.replace('raw', '');
  childType = $('#'+id+'').data('childtype')
  //Used for the check self when modifiing.
  if (!childType) {
    loadformModal(id,id,'raw',id)
  } else {
    loadformModal(childType,id,'raw',id)
  }
}

////////////////////////////////////
//////  CREATE COMPONENT     //////
//////////////////////////////////
function createComp(id){
  id = id.replace('_comp', '');
  childType = $('#'+id+'').data('childtype')
  //there is some kind of wierd lowcase requiremtns.
  parentid = $('#'+id+'').data('parentid')
  if (!childType) {
    loadformModal(childType,'','use',id)
  } else {
    loadformModal(parentid,'','use',id)
  }
}

///////////////////////////////// 
//////  DELETE CONVEYOR  ///////
/////////////////////////////// 
function deleteConveyormodal(id){
  _id = $( "#"+id ).data( "_id" )  
  html = ''
  html +='<div class="row" style="width:100%;text-align:center">'
  html +='<i class="fa fa-question-circle fa-4x" aria-hidden="true" ></i>'
  html += '<h3>Are you sure you what to do this ?</h3>'
  html += '<p>This action cannot be undone.</p>'
  html +='<div class="btn-group" role="group" aria-label="..." style="align:center">'
  html +='  <button type="button" class="btn btn-danger" onclick="deleteConveyor('
  html +="'"
  html +=_id
  html +="'"
  html +=')">Confirm</button>'
  html +='</div>'
  $('#formRenders').html(html)
}

function deleteConveyor(_id){
//always create at the selected node
var json = {
  '_id' : _id,
}
jQuery.ajax({
  'url': '/deletecv',
  'type': 'POST', 
  'contentType': 'application/json', 
  'data': JSON.stringify(json),
  'success': function (redirectTo) {
    console.log(redirectTo)
    window.location = redirectTo.redirectTo;
  }  
})
}

$(function () {
  $('[data-toggle="tooltip"]').tooltip()
})

 



</script>