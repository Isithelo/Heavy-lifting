
<div id="formDelivery"></div>

<script type="text/javascript">
var formdata = {{{formdata}}}
var idItem = {{{idItem}}}
var raw = {{{raw}}}
var parentid = {{{parentid}}}
var formid = create_uid()

//////////////////////////////////////////
////        CREATE UNIQUE ID         //// 
////////////////////////////////////////
function create_uid() {
  function s4() {
    return Math.floor((1 + Math.random()) * 0x10000)
      .toString(16)
      .substring(1);
  }
  return s4() + s4() + '-' + s4() + '-' + s4() + '-' +
    s4() + '-' + s4() + s4() + s4();
}

////////////////////////////////////
////        INITIALIZE         //// 
//////////////////////////////////
$(document).ready(function(){
  //create a unique id for the form deployment.
  jQuery('#formDelivery').attr("id",formid);
  //check if the data id was sent as well as the form id
  getdata(formdata,idItem,raw)
});

/////////////////////////////////////////
////////    GET FORM  AND DATA /////////
///////////////////////////////////////
function getdata(formdata,idItem,raw){
    jQuery.ajax({
    'url': '/getdata?formdata='+formdata+'&idItem='+idItem+'&raw='+raw,
    'async': true,
    'global': false,
    'success': function (dataSchemaObject) {
       initiateForm(dataSchemaObject)
   }
 });
}

/////////////////////////////
////        INIT        //// 
////////////////////////////
 function initiateForm(data){
   var form = {
    schema : data.formdata.entry['schema'],
    options : data.formdata.entry['options']
  }
  $('#'+formid).html("<div id='form_"+formdata+idItem+"'></div>")
  //Test alpaca form for true , i.e if it exists , then destroy it.
  control = $("#form_"+formdata+idItem).alpaca("destroy");

  if (control) {
    formInit(form.schema,form.options,data)
  } else { 
    formInit(form.schema,form.options,data)
  }
 } 

//////////////////////////////////////
////        CREATE FORM          //// 
////////////////////////////////////
function formInit(schema,options,data){
  //work areound for the special requirments on the submit button.
  options.form.buttons.submit.click = function(e){
      e.preventDefault()
      var value = this.getValue();
      formPost(value,data)
  }
  for(key in options.fields){
    if (options.fields[key]['type'] == 'select' ) {
    //options.fields[key] ["dataSource"] = "/data/icecream-list.json"
  }
}

 

switch(true){

  //the use button will require the form to remove any element ids as this will be a new entry.
  case(raw=='use'):
  $("#form_"+formdata+idItem).alpaca({
    "schema": schema,
    "options": options
    
  });
  break;
  case(raw=='edit'):
  $("#form_"+formdata+idItem).alpaca({
    "schema": schema,
    "options": options,
    "postRender": function(control) {
      //only set the data if the form is for use.
      if (idItem !='') {
        $("#form_"+formdata+idItem).alpaca('get').setValue(data.idItem.entry)
      }
    }    
  });
  break;
  case(raw=='true'):
    $("#form_"+formdata+idItem).alpaca({
    "schema": schema,
    "options": options,
    "postRender": function(control) {
      //only set the data if the form is for use.
      if (idItem !='') {
        $("#form_"+formdata+idItem).alpaca('get').setValue(data.idItem)
      }
    }    
  });
  break;
}

}
//////////////////////////////////////////////
////        SUBMIT BUTTON CLICK          //// 
////////////////////////////////////////////
function formPost(dataset,data){
//routing for the various use cases on the switch
switch(true){
  //the use button will require the form to remove any element ids as this will be a new entry.
  case(raw=='use'):
  console.log('this',data.idItem,data.formdata)
    var primer = data.idItem
    primer.objectType = data.idItem.childType
    if (data.idItem.childType=='data') {
          primer.parentid = parentid
    }
    primer.entry = dataset
    primer.elementID = ''
    primer.revision = 'created'
    primer.active = "true"
    console.log(raw,' = use','use')
  break;
  case(raw=='edit'):
    var primer = data.idItem
    primer.entry = dataset
    primer.revision = 'updated'
    primer.elementID = data.idItem.elementID
    primer.active = "true"
    console.log(raw,' = false','edit')
  break;
  case(raw=='true'):
    var primer = dataset
    console.log(raw,' = true','raw')
  break;
}
 jQuery.ajax({
    'url': '/create',
    'type': 'POST', 
    'dataType': 'json',
    'contentType': 'application/json', 
    'data': JSON.stringify(primer),
    'success': function (dataSchemaObject) {
      window.location = dataSchemaObject.redirect
    },
    'error' :function (dataSchemaObject) {
      window.location = dataSchemaObject.redirect
    },
  });  
}

</script>