 


<h3>Reset this Database</h3>
<p>This template is used to reset the Mongo dB database to defaults.</p>

<div id="detailArea">   
  <i class="fa fa-spinner fa-spin fa-1x fa-fw"></i>
  <span class="sr-only">Initializing Database...</span>
</div>

 <p></p>
   
<div class="btn-group" role="group" aria-label="..." id="group"></div>
 
<div id="area"></div>

<script type="text/javascript">
  var database

////////////////////////////////////
////        INITIALIZE         //// 
//////////////////////////////////
$(document).ready(function(){
  Initializing()
});

//////////////////////////////
//////  REQUEST DATA  ///////
////////////////////////////
function Initializing(){
  jQuery.ajax({
    'url': '/getshortdata',
    'async': true,
    'global': false,
    'success': function (dataSchemaObject) {
     database = jQuery.parseJSON( dataSchemaObject );
     var records = database.length
    
     switch(true){
      case ( records >13):
      existingRecords(records);
      break
      case (records == 13):
      getjson14(records);
      break 
      case (records == 12):
      getjson13(records);
      break 
      case (records == 11):
      getjson12(records);
      break 
      case (records == 10):
      getjson11(records);
      break 
      case (records == 9):
      getjson10(records);
      break 
      case (records == 8 ):
      getjson9(records);
      break 
      case (records == 7 ):
      getjson8(records);
      break 
      case (records == 6 ):
      getjson7(records);
      break 
      case (records == 5 ):
      getjson6(records);
      break    
      case (records == 4 ):
      getjson5(records);
      break
      case (records == 3 ):
      getjson4(records);
      break
      case (records == 2 ):
      getjson3(records);
      break
      case (records == 0 ):
      getjson1(records);
      break
    }
// Warning Duplicate IDs
$('[id]').each(function(){
  var ids = $('[id="'+this.id+'"]');
  if(ids.length>1 && ids[0]==this){
   $( this ).css( "color", "red" )
   $( this ).css( "background", "green" )
   console.warn('Multiple IDs #'+this.id);
 }
});
},
'error' :function (dataSchemaObject) {
  window.location = '/'
},
});  
}

///////////////////////////////////////////////
//////  IF THERE ARE EXISTING RECORDS  ///////
/////////////////////////////////////////////
function existingRecords(records){
 var html = ''
 var html = ''
 html += 'Database Status :   <span class="label label-success">Active</span>'
 $('#detailArea').html(html)
 html+='<p></p>'
 html+='<div class="row">'
 html+='<div class="col-md-8">'
 html+= '<div class="alert alert-warning" role="alert"> <strong>Warning!</strong> There are ' + records + ' records in this database</div>'
 html+='</div>'
 html+='<div class="col-md-4">'
 html +='<div class="btn-group" role="group" aria-label="..." style="align:center">'
 html += '<a type="button" class="btn btn-default" href="/hl-admin">Admin</a>'
 html += '<button type="button" class="btn btn-danger"  id="_del" data-toggle="modal" data-target="#myModal" onclick="deleteEntry(this.id)"   >Reset</button>'
 html+='</div>'
 html+='</div>'
 html+='<div class="col-md-12">'
 html +='<div class="btn-group" role="group" aria-label="..." style="align:center">'
 
 html += '<button type="button" class="btn btn-default"  id="_backup"  onclick="backup()"  >Refresh Backup</button>'
 html+='</div>'
 html+='</div>'
 $('#detailArea').html(html)
}

//////////////////////////////// 
//////  REFRESH BACKUP  ///////
////////////////////////////// 
function backup(){
  jQuery.ajax({
    'url': '/getdb',
    'async': true,
    'global': false,
    'success': function (dataSchemaObject) {
      var data = []
      dataSchemaObject = JSON.parse(dataSchemaObject)
      var html = ""
      for (var i = 0; i < dataSchemaObject.length; i++) {
        
        var j = i+1
        var obj = dataSchemaObject[i];
        
 
//by overwriting the elmenent ID on blanks , then all items in the databse can be transposable onto new databases.        
if (dataSchemaObject[i]['elementID'].length == 0 | !dataSchemaObject[i]['elementID']) {
  dataSchemaObject[i]['elementID']=dataSchemaObject[i]['_id']
}

//Remove values that are specific to the database.
        delete dataSchemaObject[i]['_id']
        delete dataSchemaObject[i]['parentid']
        delete dataSchemaObject[i]['childType']
        delete dataSchemaObject[i]['userID']
        delete dataSchemaObject[i]['created']
        //Prettyfy and encode the json.
 

 


 
var data = "text/json;charset=utf-8," + encodeURIComponent(JSON.stringify(obj));

 html += '<a class="btn btn-default" href="data:'  + data + '" download="'+j+'.json" id="'+j+'_dl">download JSON</a>' 

      }
$('#group').append('<a class="btn btn-default" onclick="dlall('+dataSchemaObject.length+')">Download All</a>')
$('#group').append(html)
  }
}); 
}

    function dlall(lengths){
      for (var i = 0; i < lengths; i++) {
      temp = i+1
        console.log($('#'+temp+'_dl').html)
        if ($('#'+temp+'_dl').get(0)) {
          $('#'+temp+'_dl').get(0).click();
        }
      }
    } 










/////////////////////////////////////// 
//////  DELETE ENTIRE DATABASE  ///////
///////////////////////////////////// 
function deleteEntry(id){
  id = id.replace('_del', '');  
  _id = $( "#"+id ).data( "_id" )  
  html = ''
  html +='<div class="row" style="width:100%;text-align:center">'
  html += '<h3>Are you sure you what to do this ?</h3>'
  html += '<p>This action cannot be undone.</p>'
  html +='<div class="btn-group" role="group" aria-label="..." style="align:center">'
  html +='  <button type="button" class="btn btn-danger" onclick="deleteEntrys()"">Confirm</button>'
  html +='</div>'
  $('#formAreaModal').html(html)
}

function deleteEntrys(){
  jQuery.ajax({
    'url': '/deletedb',
    'type': 'GET', 

  })
  window.location = '/'
}
 

</script>



