{{> orgheader}}
<ul class="nav nav-tabs" role="tablist">
	<li role="presentation" ><a href="/organizations/{{organization.entry.name}}" role="tab" >Summary</a></li>
	<li role="presentation" class="active"><a href="/organizations/{{organization.entry.name}}/components" role="tab">Components</a></li>
	<li role="presentation"><a href="/organizations/{{organization.entry.name}}/assemblies" role="tab">Assemblies</a></li>
	<li role="presentation" ><a href="/organizations/{{organization.entry.name}}/people" role="tab">People</a></li>
	<li role="presentation"><a href="/organizations/{{organization.entry.name}}/settings/profile" role="tab">Settings</a></li>
</ul>
<div class="row">
	<div class="col-md-8">
		<h1>Components</h1>
		<p>Use the interface below to get started on the creation and use of new site components. By signing in you can create and modify your personnel collections, or manage your organizations.</p>
	</div>
</div> 
<div class="row">
	<div class="col-md-4" id="navMenuPanel">
		<div id="myProgress">
			<div id="myBar"> </div>
		</div>
		<h5><strong>Navigation</strong> <small>Use the navigation tree to interact with the database.</small></h5>
		<div class=" ">
			<div style="padding-bottom:15px;padding-bottom:15px">
				<input id="search_field" name="searchinput" type="search" placeholder="Search Navigation" class="form-control input-md">      
			</div>
			<div id="jstree"></div> 
		</div>
		<div id="menuItems"></div>
	</div>  
	<div class="col-md-8" id="browserArea">
		<div id="panel">  
			<div style="border-width: 2px; border-style: dashed; border-color: grey;padding:55px;text-align: center;border-radius: 5px;"><strong><i class="fa fa-arrow-left" aria-hidden="true"></i>  Heads up!</strong> Click on the nodes of the navigation tree to interact with the site.</div>
		</div>
	</div>
</div>

<script type="text/javascript">
	var databaseid = {{{items}}};
	var Formids = {{{Formids}}};
	var navmenuHeadings = ['detail','description','icon','buttons','tabs','parent','template']
	var databaseMenu = []
	var temp =[]

/////////////////////////////
////     DEBUG AREA     //// 
///////////////////////////
console.log( 'admin loading' )
console.log( '-------------------------' )
console.log( 'databaseid : ',databaseid )
console.log( 'Formids : ',Formids )
console.log( 'navmenuHeadings : ',navmenuHeadings )
console.log( 'databaseMenu : ',databaseMenu )
console.log( 'temp : ',temp )
console.log( '-------------------------' )
console.log( 'admin loading' )




/////////////////////////////////// 
//////  GET JSTREE BY ID    //////
///////////////////////////////// 
function jstreeGet(ids){
	jQuery.ajax({
		'url': '/jstree?ids='+ids,
		'async': true,
		'global': false,
		'success': function (dataSchemaObject) {
			var dataSchemaObject = JSON.parse(dataSchemaObject)
      //Add the headings to the page.
      $('#descriptions').html(dataSchemaObject.thisitem[0].name)
      $('#details').html(dataSchemaObject.thisitem[0].detail)
      $('#panel').html('<div style="border-width: 2px; border-style: dashed; border-color: grey;padding:55px;text-align: center;border-radius: 5px;"><strong><i class="fa fa-arrow-left" aria-hidden="true"></i>  Heads up!</strong> Click on the nodes of the navigation tree to interact with the site.</div>')
      var dataSchemaObject1 = fitstFormat(dataSchemaObject.children)
      //manipulate data to work with the jstree
      var jsTreeData = dataJStreeConvert (dataSchemaObject1)
      var location = 'jstree'
      $('#'+location).html('')
      //load the jstree
      //change the primary page id variable , used for the parent
      databaseid = ids
      loadNavMenu(location,jsTreeData)
  }
});
}

function fitstFormat(databaseMenu){
	var temp =[]
    //This is where the id is injected into the menu item . Crude hacky work around , not sure how to improve.
    for (var i = 0; i < databaseMenu.length; i++) {
      //the add the id to the array going into the menu .
      if (databaseMenu[i]['elementID'] == "") {
      	databaseMenu[i].entry.id = databaseMenu[i]['_id']
      }else{
      	databaseMenu[i].entry.id = databaseMenu[i]['elementID']
      }
      temp.push(databaseMenu[i].entry)
  }
  databaseMenu = temp
  return databaseMenu
}

///////////////////////////// 
//////  INITIALISE    //////
/////////////////////////// 
$( document ).ready(function() {
	jstreeGet(databaseid)
});

/////////////////////////////////////////
//////  DATACONVERT FOR JSTREE    //////
/////////////////////////////////////// 
function dataJStreeConvert (databaseMenu){
	var newData = []
	for (var i = 0; i < databaseMenu.length; i++) {
		var temp = {}
		for (key in databaseMenu[i]){
			switch (true){
				case (key == 'id'):
				temp['id'] =  databaseMenu[i][key]
				if (databaseMenu[i][key]=='5848fc75b622bb53eca6ffd7') {
					state = {
              "opened" : true,  // is the node open
          }
          temp['state'] = state
      }
      break;
      case (key == 'parent'):
      temp['parent'] = databaseMenu[i][key]
      break;
      case (key == 'description'):
      temp['text'] = databaseMenu[i][key]
      break;
      case (key == 'icon'):
      temp['icon'] = databaseMenu[i][key]
      break;
      case (key == 'template'):
      aclass = { 
      	"data-template" : databaseMenu[i][key],
      }
      temp['a_attr'] =  aclass
      break;
      case (key == 'field'):
      aclass = { 
      	"data-field" : databaseMenu[i][key],
      }
      temp['a_attr'] =  aclass
      break;          
  }
}
newData.push(temp)
}
//error trap the menu.
for (var i = 0; i < newData.length; i++) {
	if (!newData[i].parent) {
		newData[i].parent = '#'
	}
}
sortResults(newData,'text', true);
return newData
}

////////////////////////////////////////////////
////////   CUSTOM JSON SORTING FUNCTION ///////
//////////////////////////////////////////////
function sortResults(json , prop, asc) {
	json = json.sort(function(a, b) {
		if (asc) {
			return (a[prop] > b[prop]) ? 1 : ((a[prop] < b[prop]) ? -1 : 0);
		} else {
			return (b[prop] > a[prop]) ? 1 : ((b[prop] < a[prop]) ? -1 : 0);
		}
	});
	return json;
}

////////////////////////////////////////////////
////////    LOAD NAV TREE INTO MEMORY   ///////
//////////////////////////////////////////////
function loadNavMenu(location,dataNav){
  //console.log(dataNav)
  //Destory the tree if it exists
  if (jQuery('#'+location).jstree("destroy")) {
  	jQuery('#'+location).jstree("destroy");
  }
  var $root =jQuery('#'+location).jstree({ 
  	'core' : {
  		'data' : dataNav,        
  		'themes': {
  			'name': 'proton',
  			'responsive': true,
  			'stripes' : false,
  		},
  	} ,
  	"checkbox" : {
  		"keep_selected_style" : false
  	},
  	"multiple": false,
  	"plugins" : [  "search" , "state"]
  });

/////////////////////////////////
////////  SEARCH NAV MENU ///////
/////////////////////////////////
var to = false;
jQuery('#search_field').keyup(function () {
	if(to) { clearTimeout(to); }
	to = setTimeout(function () {
		var v = jQuery('#search_field').val();
		jQuery('#'+location).jstree(true).search(v);
	}, 250);
});

//////////////////////////////////////////////////
////////  EVENT LISTNER ON THE TREE VIEW  ///////
////////////////////////////////////////////////
jQuery('#'+location)
    // listen for event
    .on('changed.jstree', function (e, dataTree) {
    	var i, j, r = []
    	for(i = 0, j = dataTree.selected.length; i < j; i++) {
    		var ids=(dataTree.instance.get_node(dataTree.selected[0]).id);
        //keep useful code snippet , however no longer required.
        var template=(dataTree.instance.get_node(dataTree.selected[0]).a_attr['data-template']);
        var field=(dataTree.instance.get_node(dataTree.selected[0]).a_attr['data-field']);
        r.push(dataTree.instance.get_node(dataTree.selected[i]).template);
    }
    if (field) {
    	templateloading(field)
    }else{
    	templateloading(ids)
    }
})

//////////////////////////////////////////////
////////    BUTTON CLICK OPEN FORM  /////////
////////////////////////////////////////////
$('#newMenuItem').click(function(){
  //var temp = jQuery('#'+location).jstree("get_selected",true)
  //console.log(temp[0].id)
  newMenuItems(Formids,'','use',databaseid,'',navmenuHeadings)
})
console.log('Admin Page')
console.log('---------------------------')
console.log(' databaseid :', databaseid )
console.log(' Formids :', Formids )
console.log(' navmenuHeadings :', navmenuHeadings )
console.log(' databaseMenu :', databaseMenu )
console.log(' temp :', temp )
console.log('---------------------------')
console.log('Admin Page')


//Expand and Collapse all buttons.
var html = '<div style="text-align:center"><button id="expandBtn" class="btn btn-default btn-xs"><i class="fa fa-plus-circle" aria-hidden="true"></i></button><button id="collapseBtn" class="btn btn-default btn-xs"><i class="fa fa-minus-circle" aria-hidden="true"></i></button></div>'
$('#menuItems').append(html)
jQuery('#expandBtn').click(function () {
	jQuery('#'+location).jstree('open_all');
});
jQuery('#collapseBtn').click(function () {
	jQuery('#'+location).jstree('close_all');
});
//Expand and Collapse all buttons.

}




///////////////////////////////////////////////////////
////////  EVENT LISTNER FUNCTION AREA DATABASE ///////
/////////////////////////////////////////////////////
function templateloading(ids){
//Ensure that the first load error is covered , also any other errors.
if(ids){
	jQuery.ajax({
		'async': true,
		'global': false,
		'url': '/templateload?ids='+ids,
		'success': function (dataSchemaObject) {
			jQuery('#panel').html("")
			jQuery('#panel').html(dataSchemaObject)
		}
	});
}
}

//////////////////////////////////////
////////    PROGRESS BAR    /////////
////////////////////////////////////
function move() {
	var elem = document.getElementById("myBar");   
	elem.style.height = '5px'; 
	elem.style.background = '#4c8ffd'; 
	var width = 10;
	var id = setInterval(frame, 1);
	function frame() {
		if (width >= 100) {
			clearInterval(id);
			collapse()
		} else {
			width++; 
			elem.style.width = width + '%'; 
		}
	}
}

function collapse() {
	var elem = document.getElementById("myBar");   
	elem.style.background = 'white'; 
}

//////////////////////////////////////
////////    GET FORM BY ID  /////////
////////////////////////////////////
function newMenuItems(formdata,idItem,raw,parentid,injectParentid,headings){
	console.log(formdata,idItem,raw,parentid,injectParentid,headings)
	var headings = JSON.stringify(headings)
	jQuery.ajax({
		'url': '/getform?formdata='+formdata+'&idItem='+idItem+'&raw='+raw+'&parentid='+parentid+'&headings='+headings,
		'async': true,
		'global': false,
		'success': function (dataSchemaObject) {
			$('#formAreaModal').html(dataSchemaObject)
		}
	});
}
</script>

