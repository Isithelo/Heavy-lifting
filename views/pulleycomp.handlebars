<div class="row">
  <div class="col-md-12">
    <h1>Pulleys <small>You are viewing <span class="badge" id="spans">0</span> components</small></h1>
    <p>This is the pulley design page. Create you design sets and then upload to an assembly.</p>
  </div>
</div> 
<div class="row"> 
  <div class="col-md-6">
    <div class="row">
      <div class="col-md-12">
        <textarea class="form-control" id="CadExportArea" name="CadExportArea"  style="display: none;" ></textarea>
      </div>
      <div class="col-md-12">
        <div class="panel panel-default">
          <div class="panel-body">
            <a style="position: absolute;right: 25px" download="Idlers.scr" id="downloadlink" class="btn btn-info" style="" data-toggle="tooltip" data-placement="top" title="Drag and drop the SCR file into AutCAD to draw this idler, ensure Onsnap is disabled"><i class="fa fa-file-code-o" aria-hidden="true"></i>
            </a>
            <div style="text-align:center;cursor:all-scroll;" id="canvasWidth">
              <p>Click and drag to zoom and pan.</p>
              <canvas id="canvas" style="" ></canvas>
            </div>
          </div>
        </div>
        <div class="panel panel-default">
          <div class="panel-body">
            <div id="highCharts"></div>
          </div>
        </div>
      </div>
    </div>
  </div>
  {{>tablebrowser}}
  <script type="text/javascript"> 

    var query   =  {{{query}}}
    var query1  =  {{{query1}}}
    var query2  =  {{{query2}}}
    var query3  =  {{{query3}}} 
    var query4  =  {{{query4}}}
    var table

    query3.sort(function(a, b) {
      if (a.entry.order && b.entry.order) {
        return parseFloat(a.entry.order) - parseFloat(b.entry.order);
      }
    });
    query2.sort(function(a, b) {
      return parseFloat(a.entry.order) - parseFloat(b.entry.order);
    });

    var item = 2
    var pulleyPhys = query3[item].entry



///////////////////////////// 
//////  INITIALISE    //////
/////////////////////////// 
$('document').ready(function(){
  load();
  activateCanvasIdler()
  $('#col28_filter').click()
$('#col6_xaxis').click()
  $('#col2_group').click()
  $('#col11_yaxis').click()
  
})



/////////////////////////////
////     DEBUG AREA     //// 
///////////////////////////
console.log( 'TABLEBROWSER LOADING' )
console.log( '-------------------------' )
console.log( 'query : ',query )
console.log( 'query1 : ',query1 )
console.log( 'query2 : ',query2 )
console.log( 'query3 : ',query3 )
console.log( 'query4 : ',query4 )
console.log( '-------------------------' )
console.log( 'TABLEBROWSER LOADING' )

var selection = "pulley"

var theta = 0
//fixed variables , modify if required.
var sx = 1;
var sy = 1;
var tx = 0
var ty = 0
var height = $("#canvas").height()
var width = $("#canvas").width()

/////////////////////////////////////////////
////////  EXPORT TO SCR FILE AUTOCAD ///////
///////////////////////////////////////////
function load() {
  var textFile = null,
  makeTextFile = function (text) {
    var data = new Blob([text], {type: 'text/plain'});
    // If we are replacing a previously generated file we need to
    // manually revoke the object URL to avoid memory leaks.
    if (textFile !== null) {
      window.URL.revokeObjectURL(textFile);
    }
    textFile = window.URL.createObjectURL(data);
    return textFile;
  };
  var create = document.getElementById('downloadlink')
  var textbox = document.getElementById('CadExportArea')
  create.addEventListener('click', function () {
    var link = document.getElementById('downloadlink');
    link.href = makeTextFile(textbox.value);
  }, false);
}

 


//////////////////////////////////////// 
//////  START THE CANVAS DRAW    //////
///////////////////////////////////////
function activateCanvasIdler(){
  var canvas = document.getElementById('canvas');
  canvas.width= $('#canvasWidth').width()-50
  canvas.height = $('#canvasWidth').width()-150
  var gkhead = new Image;
  var ball   = new Image;
  var ctx = canvas.getContext('2d');
  trackTransforms(ctx);
  ctx.translate(canvas.width/2,canvas.height/2);
  function redraw(){
      // Clear the entire canvas
      var p1 = ctx.transformedPoint(0,0);
      var p2 = ctx.transformedPoint(canvas.width,canvas.height);
      ctx.clearRect(p1.x,p1.y,p2.x-p1.x,p2.y-p1.y);
      ctx.save();
      ctx.translate(6,2);
      ctx.beginPath();
      ctx.stroke();
      ctx.scale(-.10,-.10)
      ctx.beginPath();

      var filterdata = table.rows( { search:'applied' } ).data()
      $("#CadExportArea").html('');
      for (var i = 0; i < filterdata.length; i++) {
        for (var j = 0; j < query3.length; j++) {
          if (filterdata[i][28] == query3[j].elementID) {
            drawPulley("canvas",i,i*1500)
          }
        }
      }


      ctx.restore();
    }
    redraw();
    var lastX=canvas.width/2, lastY=canvas.height/2;
    var dragStart,dragged;
    canvas.addEventListener('mousedown',function(evt){
      document.body.style.mozUserSelect = document.body.style.webkitUserSelect = document.body.style.userSelect = 'none';
      lastX = evt.offsetX || (evt.pageX - canvas.offsetLeft);
      lastY = evt.offsetY || (evt.pageY - canvas.offsetTop);
      dragStart = ctx.transformedPoint(lastX,lastY);
      dragged = false;
    },false);
    canvas.addEventListener('mousemove',function(evt){
      lastX = evt.offsetX || (evt.pageX - canvas.offsetLeft);
      lastY = evt.offsetY || (evt.pageY - canvas.offsetTop);
      dragged = true;
      if (dragStart){
        var pt = ctx.transformedPoint(lastX,lastY);
        ctx.translate(pt.x-dragStart.x,pt.y-dragStart.y);
        redraw();
      }
    },false);
        try {
      document.getElementById('searchtable').addEventListener('keyup',function(evt){
        lastX = evt.offsetX || (evt.pageX - canvas.offsetLeft);
        lastY = evt.offsetY || (evt.pageY - canvas.offsetTop);
        dragged = true;
      //i think this is where is is safe to draw
      $("#CadExportArea").html('');
      var filterdata = table.rows( { search:'applied' } ).data()
      for (var i = 0; i < filterdata.length; i++) {
        for (var j = 0; j < query3.length; j++) {
         if (filterdata[i][18] == query3[j].elementID) {
            drawIdler("canvas",i,i*300)
          }
        }
       }
        redraw();
        
    //console.log(data)
    return false;
  },false);
    }
    catch(err) {
      //console.log("form not open")
    }
    canvas.addEventListener('mouseup',function(evt){
      dragStart = null;
      if (!dragged) zoom(evt.shiftKey ? -1 : 1 );
    },false);

    var scaleFactor = 1.1;
    var zoom = function(clicks){
      var pt = ctx.transformedPoint(lastX,lastY);
      ctx.translate(pt.x,pt.y);
      var factor = Math.pow(scaleFactor,clicks);
      ctx.scale(factor,factor);
      ctx.translate(-pt.x,-pt.y);
      redraw();
    }
    var handleScroll = function(evt){
      var delta = evt.wheelDelta ? evt.wheelDelta/40 : evt.detail ? -evt.detail : 0;
      if (delta) zoom(delta);
      return evt.preventDefault() && false;
    };
    canvas.addEventListener('DOMMouseScroll',handleScroll,false);
    canvas.addEventListener('mousewheel',handleScroll,false);
    gkhead.src = '';
    ball.src   = '';
  // Adds ctx.getTransform() - returns an SVGMatrix
  // Adds ctx.transformedPoint(x,y) - returns an SVGPoint
  function trackTransforms(ctx){
    var svg = document.createElementNS("http://www.w3.org/2000/svg",'svg');
    var xform = svg.createSVGMatrix();
    ctx.getTransform = function(){ return xform; };
    var savedTransforms = [];
    var save = ctx.save;
    ctx.save = function(){
      savedTransforms.push(xform.translate(0,0));
      return save.call(ctx);
    };
    var restore = ctx.restore;
    ctx.restore = function(){
      xform = savedTransforms.pop();
      return restore.call(ctx);
    };
    var scale = ctx.scale;
    ctx.scale = function(sx,sy){
      xform = xform.scaleNonUniform(sx,sy);
      return scale.call(ctx,sx,sy);
    };
    var rotate = ctx.rotate;
    ctx.rotate = function(radians){
      xform = xform.rotate(radians*180/Math.PI);
      return rotate.call(ctx,radians);
    };
    var translate = ctx.translate;
    ctx.translate = function(dx,dy){
      xform = xform.translate(dx,dy);
      return translate.call(ctx,dx,dy);
    };
    var transform = ctx.transform;
    ctx.transform = function(a,b,c,d,e,f){
      var m2 = svg.createSVGMatrix();
      m2.a=a; m2.b=b; m2.c=c; m2.d=d; m2.e=e; m2.f=f;
      xform = xform.multiply(m2);
      return transform.call(ctx,a,b,c,d,e,f);
    };
    var setTransform = ctx.setTransform;
    ctx.setTransform = function(a,b,c,d,e,f){
      xform.a = a;
      xform.b = b;
      xform.c = c;
      xform.d = d;
      xform.e = e;
      xform.f = f;
      return setTransform.call(ctx,a,b,c,d,e,f);
    };
    var pt  = svg.createSVGPoint();
    ctx.transformedPoint = function(x,y){
      pt.x=x; pt.y=y;
      return pt.matrixTransform(xform.inverse());
    }
  }
}



/////////////////////////////// 
//////  DRAW COUPLING   //////
///////////////////////////// 
function drawCoupling(locations){
  couplingVar = getCoupling()
  var coupling = drawrRectangle(couplingVar["594912798cda6431945a2fca"],couplingVar["594912a18cda6431945a2fd2"]);
  //transformMatrix(coupling,sx,sy,0,0,pulleyPhys["Ã˜E"]/2)  
  autoCAD(coupling)   
  drawidlerCanvas(locations,coupling,'grey')  
  var coupling = drawrRectangle(couplingVar["594912748cda6431945a2fc9"],couplingVar["594912938cda6431945a2fcf"]);
  transformMatrix(coupling,sx,sy,0,couplingVar["594912938cda6431945a2fcf"]/2,0)  
  autoCAD(coupling)   
  drawidlerCanvas(locations,coupling,'grey')  
  var coupling = drawrRectangle(couplingVar["594912748cda6431945a2fc9"],couplingVar["594912938cda6431945a2fcf"]);
  transformMatrix(coupling,sx,sy,0,-couplingVar["594912938cda6431945a2fcf"]/2,0) 
  autoCAD(coupling)   
  drawidlerCanvas(locations,coupling,'grey')  
}

/////////////////////////////// 
//////  DRAW PULLEY     //////
///////////////////////////// 
function drawPulley(locations,item,translates)
{
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
var pulley ={}
pulleyPhys = query3[item].entry
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//Parse area
pulleyPhys['594912988cda6431945a2fd0'] = parseFloat(pulleyPhys['594912988cda6431945a2fd0'])//Overall shaft length
pulleyPhys['594912798cda6431945a2fca'] = parseFloat(pulleyPhys['594912798cda6431945a2fca'])
pulleyPhys['594912748cda6431945a2fc9'] = parseFloat(pulleyPhys['594912748cda6431945a2fc9'])//Ã˜A
pulleyPhys['594912b08cda6431945a2fd5'] = parseFloat(pulleyPhys['594912b08cda6431945a2fd5'])
pulleyPhys['5949128e8cda6431945a2fce'] = parseFloat(pulleyPhys['5949128e8cda6431945a2fce'])
pulleyPhys['594912898cda6431945a2fcd'] = parseFloat(pulleyPhys['594912898cda6431945a2fcd'])//Ã˜E
pulleyPhys['594912028cda6431945a2fbe'] = parseFloat(pulleyPhys['594912028cda6431945a2fbe'])
pulleyPhys['594912ac8cda6431945a2fd4'] = parseFloat(pulleyPhys['594912ac8cda6431945a2fd4'])
pulleyPhys['5949127f8cda6431945a2fcb'] = parseFloat(pulleyPhys['5949127f8cda6431945a2fcb'])
pulleyPhys['594912848cda6431945a2fcc'] = parseFloat(pulleyPhys['594912848cda6431945a2fcc'])
pulleyPhys['594912588cda6431945a2fc6'] = parseFloat(pulleyPhys['594912588cda6431945a2fc6'])//Bearing Centers
pulleyPhys['594912938cda6431945a2fcf'] =  parseFloat(pulleyPhys['594912588cda6431945a2fc6'])//G
pulleyPhys['5952012c0986fc41b4bc3e83'] = parseFloat(pulleyPhys['5952012c0986fc41b4bc3e83'])
pulleyPhys['5952013b0986fc41b4bc3e84'] = parseFloat(pulleyPhys['5952013b0986fc41b4bc3e84'])//H1 Dimension
pulleyPhys['5952014a0986fc41b4bc3e85'] = parseFloat(pulleyPhys['5952014a0986fc41b4bc3e85'])//H2 Dimension
pulleyPhys['595201510986fc41b4bc3e86'] = parseFloat(pulleyPhys['595201510986fc41b4bc3e86']) 
pulleyPhys['5952015e0986fc41b4bc3e87'] = parseFloat(pulleyPhys['5952015e0986fc41b4bc3e87']) 
pulleyPhys['594912a78cda6431945a2fd3'] =parseFloat(pulleyPhys['594912a78cda6431945a2fd3']) //L value
pulleyPhys['59522a1774612409d4bfc04d'] =parseFloat(pulleyPhys['59522a1774612409d4bfc04d']) //bearing width
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////






/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//Fixed values to be changed over time.   
pulleyPhys["Number of Rigid Flange Couplings"] = 0
pulleyPhys['594912988cda6431945a2fd0'] = pulleyPhys['594912588cda6431945a2fc6'] +pulleyPhys["59522a1774612409d4bfc04d"] /2 //Overall shaft length  
pulleyPhys["Q"] = 10 // offset.
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//check how many couplings to draw.
switch (true){
  case (pulleyPhys["Number of Rigid Flange Couplings"]==1):
  drawCoupling("canvas",pulleyPhys["594912988cda6431945a2fd0"]/2,0)
  break;
  case (pulleyPhys["Number of Rigid Flange Couplings"]==2):
  drawCoupling("canvas",pulleyPhys["594912988cda6431945a2fd0"]/2,0)
  drawCoupling("canvas",-pulleyPhys["594912988cda6431945a2fd0"]/2,0)
  break;  
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////BEARING JOURNAL SHAFT//////////////////////////////////////////////////////////
height = pulleyPhys["594912798cda6431945a2fca"]
width =  pulleyPhys["594912988cda6431945a2fd0"]
x1=0
y1=0
var bearingArea1 = drawrRectangle(height,width);
pulley['bearingArea1'] = transformMatrixSimple(bearingArea1,sx,sy,0,x1,y1)
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
height = pulleyPhys["5952012c0986fc41b4bc3e83"]
width = pulleyPhys["59522a1774612409d4bfc04d"]
x1=pulleyPhys["594912938cda6431945a2fcf"]/2
y1=pulleyPhys["5952012c0986fc41b4bc3e83"]/2-pulleyPhys["5952013b0986fc41b4bc3e84"]
var bearingleft = drawrRectangle(height,width);
pulley['bearingleft'] = transformMatrixSimple(bearingleft,sx,sy,0,x1,y1)
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
height = pulleyPhys["5952014a0986fc41b4bc3e85"]
width = pulleyPhys["59522a1774612409d4bfc04d"]
x1=pulleyPhys["594912938cda6431945a2fcf"]/2
y1=pulleyPhys["5952014a0986fc41b4bc3e85"]/2-pulleyPhys["5952013b0986fc41b4bc3e84"]
var bearingright = drawrRectangle(height,width);
pulley['bearingright1'] = transformMatrixSimple(bearingright,sx,sy,0,x1,y1)
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
height = pulleyPhys["5952012c0986fc41b4bc3e83"]
width = pulleyPhys["59522a1774612409d4bfc04d"]
x1=-pulleyPhys["594912938cda6431945a2fcf"]/2
y1=pulleyPhys["5952012c0986fc41b4bc3e83"]/2-pulleyPhys["5952013b0986fc41b4bc3e84"]
var bearingleft = drawrRectangle(height,width);
pulley['bearingleft1'] = transformMatrixSimple(bearingleft,sx,sy,0,x1,y1)
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
height = pulleyPhys["5952014a0986fc41b4bc3e85"]
width = pulleyPhys["59522a1774612409d4bfc04d"]
x1=-pulleyPhys["594912938cda6431945a2fcf"]/2
y1=pulleyPhys["5952014a0986fc41b4bc3e85"]/2-pulleyPhys["5952013b0986fc41b4bc3e84"]
var bearingright = drawrRectangle(height,width);
pulley['bearingright2'] = transformMatrixSimple(bearingright,sx,sy,0,x1,y1)
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
var topshell = drawrRectangle(pulleyPhys["5949128e8cda6431945a2fce"],pulleyPhys["594912028cda6431945a2fbe"],0,pulleyPhys["594912898cda6431945a2fcd"]/2-pulleyPhys["5949128e8cda6431945a2fce"]/2);
x1=0
y1=-pulleyPhys["594912898cda6431945a2fcd"]/2+pulleyPhys["5949128e8cda6431945a2fce"]/2
pulley['topshell'] = transformMatrixSimple(topshell,sx,sy,0,x1,y1)
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
var bottomshell = drawrRectangle(pulleyPhys["5949128e8cda6431945a2fce"],pulleyPhys["594912028cda6431945a2fbe"],0,-pulleyPhys["594912898cda6431945a2fcd"]/2+pulleyPhys["5949128e8cda6431945a2fce"]/2);
x1=0
y1=pulleyPhys["594912898cda6431945a2fcd"]/2-pulleyPhys["5949128e8cda6431945a2fce"]/2



pulley['bottomshell'] = transformMatrixSimple(bottomshell,sx,sy,0,x1,y1)
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
height = ((pulleyPhys["594912ac8cda6431945a2fd4"]-pulleyPhys["594912748cda6431945a2fc9"])/2)
width =(pulleyPhys["594912b08cda6431945a2fd5"])
x1=((pulleyPhys["594912028cda6431945a2fbe"]-pulleyPhys["594912b08cda6431945a2fd5"])/2-pulleyPhys["Q"])
y1=((pulleyPhys["594912748cda6431945a2fc9"])/2 +height/2)
var hub1 = drawrRectangle(height,width);
pulley['hub1'] = transformMatrixSimple(hub1,sx,sy,0,x1,y1)
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
height = ((pulleyPhys["594912ac8cda6431945a2fd4"]-pulleyPhys["594912748cda6431945a2fc9"])/2)
width =-(pulleyPhys["594912b08cda6431945a2fd5"])
x1=-((pulleyPhys["594912028cda6431945a2fbe"]-pulleyPhys["594912b08cda6431945a2fd5"])/2-pulleyPhys["Q"])
y1=((pulleyPhys["594912748cda6431945a2fc9"])/2 +height/2)
var hub2 = drawrRectangle(height,width);
pulley['hub2'] = transformMatrixSimple(hub2,sx,sy,0,x1,y1)
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
height = -((pulleyPhys["594912ac8cda6431945a2fd4"]-pulleyPhys["594912748cda6431945a2fc9"])/2)
width =(pulleyPhys["594912b08cda6431945a2fd5"])
x1=((pulleyPhys["594912028cda6431945a2fbe"]-pulleyPhys["594912b08cda6431945a2fd5"])/2-pulleyPhys["Q"])
y1=-((pulleyPhys["594912748cda6431945a2fc9"])/2 -height/2)
var hub3 = drawrRectangle(height,width);
pulley['hub3'] = transformMatrixSimple(hub3,sx,sy,0,x1,y1)
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
height = -((pulleyPhys["594912ac8cda6431945a2fd4"]-pulleyPhys["594912748cda6431945a2fc9"])/2)
width =-(pulleyPhys["594912b08cda6431945a2fd5"])
x1=-((pulleyPhys["594912028cda6431945a2fbe"]-pulleyPhys["594912b08cda6431945a2fd5"])/2-pulleyPhys["Q"])
y1=-((pulleyPhys["594912748cda6431945a2fc9"])/2 -height/2)
var hub4 = drawrRectangle(height,width);
pulley['hub4'] = transformMatrixSimple(hub4,sx,sy,0,x1,y1)
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////////////////////////////////////////////////
height = ((pulleyPhys["594912898cda6431945a2fcd"]-pulleyPhys["5949128e8cda6431945a2fce"]*2-pulleyPhys["594912ac8cda6431945a2fd4"])/2)
width =(pulleyPhys["594912a78cda6431945a2fd3"])
x1=((pulleyPhys["594912028cda6431945a2fbe"]-pulleyPhys["594912b08cda6431945a2fd5"])/2-pulleyPhys["Q"])
y1=((pulleyPhys["594912ac8cda6431945a2fd4"])/2 +height/2)
var hub1shell = drawrRectangle(height,width);
pulley['hub1shell'] = transformMatrixSimple(hub1shell,sx,sy,0,x1,y1)
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
height = ((pulleyPhys["594912898cda6431945a2fcd"]-pulleyPhys["5949128e8cda6431945a2fce"]*2-pulleyPhys["594912ac8cda6431945a2fd4"])/2)
width =-(pulleyPhys["594912a78cda6431945a2fd3"])
x1=-((pulleyPhys["594912028cda6431945a2fbe"]-pulleyPhys["594912b08cda6431945a2fd5"])/2-pulleyPhys["Q"])
y1=((pulleyPhys["594912ac8cda6431945a2fd4"])/2 +height/2)
var hub1shell = drawrRectangle(height,width);
pulley['hub2shell'] = transformMatrixSimple(hub1shell,sx,sy,0,x1,y1)
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
height = -((pulleyPhys["594912898cda6431945a2fcd"]-pulleyPhys["5949128e8cda6431945a2fce"]*2-pulleyPhys["594912ac8cda6431945a2fd4"])/2)
width =(pulleyPhys["594912a78cda6431945a2fd3"])
x1=((pulleyPhys["594912028cda6431945a2fbe"]-pulleyPhys["594912b08cda6431945a2fd5"])/2-pulleyPhys["Q"])
y1=-((pulleyPhys["594912ac8cda6431945a2fd4"])/2 -height/2)
var hub1shell = drawrRectangle(height,width);
pulley['hub3shell'] = transformMatrixSimple(hub1shell,sx,sy,0,x1,y1)
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
height = -((pulleyPhys["594912898cda6431945a2fcd"]-pulleyPhys["5949128e8cda6431945a2fce"]*2-pulleyPhys["594912ac8cda6431945a2fd4"])/2)
width =-(pulleyPhys["594912a78cda6431945a2fd3"])
x1=-((pulleyPhys["594912028cda6431945a2fbe"]-pulleyPhys["594912b08cda6431945a2fd5"])/2-pulleyPhys["Q"])
y1=-((pulleyPhys["594912ac8cda6431945a2fd4"])/2 -height/2)
var hub1shell = drawrRectangle(height,width);
pulley['hub4shell'] = transformMatrixSimple(hub1shell,sx,sy,0,x1,y1)
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
height = pulleyPhys["594912748cda6431945a2fc9"]
width = pulleyPhys["594912938cda6431945a2fcf"] - pulleyPhys["59522a1774612409d4bfc04d"]-70
x1=0
y1=0
var majorShaft2 = drawrRectangle(height,width);
pulley['majorShaft2'] = transformMatrixSimple(majorShaft2,sx,sy,0,x1,y1)
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

var ty = translates
pulley = transformMatrix(pulley,sx,sy,theta,tx,ty)
autoCAD(pulley)   
drawidlerCanvas(locations,pulley,'#ED202A') 
};

/////////////////////////////// 
//////  AUTOCAD SRC     //////
///////////////////////////// 
function autoCAD (transformArray) {
    //start by clearing the belting paragraph text box.
    for (var key in transformArray) {
      var Roll = "pline "   
     //change 0 to 1 in the loop below to skip the datum point.
     for (var i = 1; i < transformArray[key].length; i++) {
      Roll=Roll.concat((transformArray[key][i].x) +","+ (transformArray[key][i].y) + " ")
    };
    Roll=Roll.concat("c ")
    $("#CadExportArea").append(Roll);
  }
  $("#CadExportArea").append(Roll);
};

/////////////////////////////////// 
//////  DRAW THE PULLEY     //////
///////////////////////////////// 
function drawidlerCanvas(locations,transformArray,colour)
{
  var canvas = document.getElementById(locations);
  var ctx = canvas.getContext('2d');
  ctx.beginPath();
  for (var key in transformArray) {
    ctx.moveTo(transformArray[key][1].x,transformArray[key][1].y)
    for (var i = 1; i < transformArray[key].length; i++) {
      transformArray[key][i]
      ctx.lineTo(transformArray[key][i].x,transformArray[key][i].y);
    };
    ctx.lineTo(transformArray[key][1].x,transformArray[key][1].y)
    ctx.lineWidth = 1;
    //ctx.fillStyle = "none";
    //ctx.fill();     
    ctx.stroke();
  }
  ctx.beginPath();
  ctx.moveTo(0,0);
  ctx.lineTo(0,500);
  ctx.moveTo(0,0);
  ctx.lineTo(-1000,0);
  ctx.moveTo(0,0);
  ctx.lineTo(0,-500);
  ctx.moveTo(0,0);
  ctx.lineTo(1000,0);
  ctx.lineWidth = .5;
  ctx.fillStyle = colour;
  ctx.stroke();
};



///////////////////////////////////// 
//////  DRAW THE RECTANGLE    //////
///////////////////////////////////  
function drawrRectangle (height,width) {
  x=0;
  y=0;
  var rectan=([]);//starting coordinate
  //5 points in total
  rectan.push(
  {
    "x":x,
    "y":y,
    "drawn" :"yes"
  });
  //5 points in total
  rectan.push(
  {
    "x":-width/2,
    "y":height/2,
    "drawn" :"yes"
  });
  rectan.push(
  {
    "x":width/2,
    "y":height/2,
    "drawn" :"yes"
  });
  rectan.push(
  {
    "x":width/2,
    "y":-height/2,
    "drawn" :"yes"
  });
  rectan.push(
  {
    "x":-width/2,
    "y":-height/2,
    "drawn" :"yes"
  });
  return  rectan
};

///////////////////////////////////// 
//////  TRANSFORM MATRIX      //////
/////////////////////////////////// 
function transformMatrix(transformArray,sx,sy,theta,tx,ty)
{
  for (var key in transformArray) {
 //change 0 to 1 in the loop below to skip the datum point.
 for (var i = 0; i < transformArray[key].length; i++) {
    //scaling
    transformArray[key][i].x = transformArray[key][i].x*sx
    transformArray[key][i].y = transformArray[key][i].y*sy
    //rotation
    tempx = (Math.cos(theta)*transformArray[key][i].x)-(Math.sin(theta)*transformArray[key][i].y)
    tempy = (Math.sin(theta)*transformArray[key][i].x)+(Math.cos(theta)*transformArray[key][i].y)
    transformArray[key][i].x = tempx
    transformArray[key][i].y = tempy
    //translate
    transformArray[key][i].x = transformArray[key][i].x+tx
    transformArray[key][i].y = transformArray[key][i].y+ty
  };
}
return transformArray
};

///////////////////////////////////// 
//////  TRANSFORM MATRIX      //////
/////////////////////////////////// 
function transformMatrixSimple(transformArray,sx,sy,theta,tx,ty)
{

 //change 0 to 1 in the loop below to skip the datum point.
 for (var i = 0; i < transformArray.length; i++) {
    //scaling
    transformArray[i].x = transformArray[i].x*sx
    transformArray[i].y = transformArray[i].y*sy
    //rotation
    tempx = (Math.cos(theta)*transformArray[i].x)-(Math.sin(theta)*transformArray[i].y)
    tempy = (Math.sin(theta)*transformArray[i].x)+(Math.cos(theta)*transformArray[i].y)
    transformArray[i].x = tempx
    transformArray[i].y = tempy
    //translate
    transformArray[i].x = transformArray[i].x+tx
    transformArray[i].y = transformArray[i].y+ty
  };

  return transformArray
};


</script>    