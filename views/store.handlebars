
    <h1 id="name"></h1>
    <p id="detail"></p>
    <div class="row">
      <div class="col-md-4" id="navMenuPanel">
        <div class="panel panel-default">
          <div class="panel-body">
          <div id="myProgress">
  <div id="myBar"> </div>
</div>
           <h5><strong>Navigation</strong> <small>Use the navigation tree to interact with the database.</small></h5>
           <div class="panel">
             <div style="padding-bottom:15px;padding-bottom:15px">
              <input id="search_field" name="searchinput" type="search" placeholder="Search Navigation" class="form-control input-md">      
            </div>
            <div id="jstree"></div> 
          </div>
          <div class="btn-group" role="group" aria-label="..." style="padding-bottom: 15px">
            <button type="button" class="btn btn-default" id="newMenuItem" data-toggle="modal" data-target="#myModal"><i class="fa fa-plus" aria-hidden="true"></i></button> 
          </div>
        </div>
      </div>
    </div>  
    <div class="col-md-8" id="browserArea">
      <div id="panel">  
        <div class="alert alert-info" role="alert"> <strong><i class="fa fa-arrow-left" aria-hidden="true"></i>  Heads up!</strong> Click on the nodes of the navigation tree to interact with the site.</div>
      </div>
    </div>
  </div>
 

<script type="text/javascript">
 
//The menu item from JSTREE
var items = {{{query}}}
//The applicable form for use ( query.childtype)
var query1 = {{{query1}}}
//The form in queston
var query2 = {{{query2}}}
//the form elements.
var query3 = {{{query3}}}
//the form datasets.
var query4= {{{query4}}}
//The query.parentid items.
var tablelistdata = {{{query3}}};

//Unique if for the forms.
var formids = create_uid()
 
var templateload = {{{templateload}}}
 
var modifiedTableListData
/////////////////////////////////////
////     HEADINGS AND STUFF     //// 
///////////////////////////////////
$('#name').html(items.name)
$('#detail').html(items.detail)


/////////////////////////////
////     DEBUG AREA     //// 
///////////////////////////
console.log( 'databasetablelist loading' )
console.log( '-------------------------' )
console.log( 'items : ',items )
console.log( 'query1 : ',query1 )
console.log( 'query2 : ',query2 )
console.log( 'query3 : ',query3 )
console.log( 'query4 : ',query4 )
console.log( 'tablelistdata : ',tablelistdata )
console.log( 'formids : ',formids )
console.log( '-------------------------' )
console.log( 'databasetablelist loading' )


//////////////////////////////////////////
////        CREATE UNIQUE ID         //// 
////////////////////////////////////////
function create_uid() {
  function s4() {
    return Math.floor((1 + Math.random()) * 0x10000)
    .toString(16)
    .substring(1);
  }
  return s4() + s4() + '-' + s4() + '-' + s4() + '-' +
  s4() + '-' + s4() + s4() + s4();
}

///////////////////////////////////////////////////
////        REQUIRED FORMATING OF DATA        //// 
/////////////////////////////////////////////////
function dataFormatComp(){
  var temp = []
  //This is where the id is injected into the menu item . Crude hacky work around , not sure how to improve.
  for (var i = 0; i < tablelistdata.length; i++) {
    for(key in tablelistdata[i].entry){
      for (var j = 0; j < query2.length; j++) {
        if (query2[j].elementID == key) {
          tablelistdata[i].entry[query2[j]['entry']['description']] = tablelistdata[i].entry[query2[j].elementID]
          delete tablelistdata[i].entry[query2[j].elementID]
        }
      }
    }
tablelistdata[i].entry.id = tablelistdata[i].elementID
   temp.push(tablelistdata[i].entry)
 }
 modifiedTableListData = temp
}
 
///////////////////////////// 
//////  INITIALISE    //////
/////////////////////////// 
$( document ).ready(function() {
         dataFormatComp()
      var location = 'jstree'
      $('#'+location).html('')
      var temp = dataJStreeConvert (modifiedTableListData)
      loadNavMenu(location,temp)
});

/////////////////////////////////////////
//////  DATACONVERT FOR JSTREE    //////
/////////////////////////////////////// 
function dataJStreeConvert (databaseMenu){
  console.log(databaseMenu)
  var newData = []
  for (var i = 0; i < databaseMenu.length; i++) {
    var temp = {}
    for (key in databaseMenu[i]){
      switch (true){
        case (key == 'id'):
        temp['id'] =  databaseMenu[i][key]
        if (databaseMenu[i][key]=='5848fc75b622bb53eca6ffd7') {
          state = {
              "opened" : true,  // is the node open
            }
            temp['state'] = state
          }
          break;
          case (key == 'parent'):
          temp['parent'] = databaseMenu[i][key]
          break;
          case (key == 'description'):
          temp['text'] = databaseMenu[i][key]
          break;
          case (key == 'icon'):
          temp['icon'] = databaseMenu[i][key]
          break;
          case (key == 'template'):
          aclass = { 
            "data-template" : databaseMenu[i][key],
          }
          temp['a_attr'] =  aclass
          break;
          case (key == 'field'):
          aclass = { 
            "data-field" : databaseMenu[i][key],
          }
          temp['a_attr'] =  aclass
          break;          
        }
      }
      newData.push(temp)
    }
//error trap the menu.
for (var i = 0; i < newData.length; i++) {
  if (!newData[i].parent) {
    newData[i].parent = '#'
  }
}
sortResults(newData,'text', true);
return newData
}

////////////////////////////////////////////////
////////   CUSTOM JSON SORTING FUNCTION ///////
//////////////////////////////////////////////
function sortResults(json , prop, asc) {
  json = json.sort(function(a, b) {
    if (asc) {
      return (a[prop] > b[prop]) ? 1 : ((a[prop] < b[prop]) ? -1 : 0);
    } else {
      return (b[prop] > a[prop]) ? 1 : ((b[prop] < a[prop]) ? -1 : 0);
    }
  });
  return json;
}

////////////////////////////////////////////////
////////    LOAD NAV TREE INTO MEMORY   ///////
//////////////////////////////////////////////
function loadNavMenu(location,dataNav){
  //console.log(dataNav)
  //Destory the tree if it exists
  if (jQuery('#'+location).jstree("destroy")) {
    jQuery('#'+location).jstree("destroy");
  }
  var $root =jQuery('#'+location).jstree({ 
    'core' : {
      'data' : dataNav,        
      'themes': {
        'name': 'proton',
        'responsive': true,
        'stripes' : false,
      },
    } ,
    "checkbox" : {
      "keep_selected_style" : false
    },
    "multiple": false,
    "plugins" : [ "wholerow" , "search" , "state"]
  });

/////////////////////////////////
////////  SEARCH NAV MENU ///////
/////////////////////////////////
var to = false;
jQuery('#search_field').keyup(function () {
  if(to) { clearTimeout(to); }
  to = setTimeout(function () {
    var v = jQuery('#search_field').val();
    jQuery('#'+location).jstree(true).search(v);
  }, 250);
});

//////////////////////////////////////////////////
////////  EVENT LISTNER ON THE TREE VIEW  ///////
////////////////////////////////////////////////
jQuery('#'+location)
    // listen for event
    .on('changed.jstree', function (e, dataTree) {
      var i, j, r = []
      for(i = 0, j = dataTree.selected.length; i < j; i++) {
        var ids=(dataTree.instance.get_node(dataTree.selected[0]).id);
        //keep useful code snippet , however no longer required.
        var template=(dataTree.instance.get_node(dataTree.selected[0]).a_attr['data-template']);
        var field=(dataTree.instance.get_node(dataTree.selected[0]).a_attr['data-field']);
        r.push(dataTree.instance.get_node(dataTree.selected[i]).template);
      }
      if (field) {
        templateloading(field,template)
      }else{
        templateloading(ids,template)
      }
    })

//////////////////////////////////////////////
////////    BUTTON CLICK OPEN FORM  /////////
////////////////////////////////////////////
$('#newMenuItem').click(function(){
  //var temp = jQuery('#'+location).jstree("get_selected",true)
  //console.log(temp[0].id)
  newMenuItems(Formids,'','use',items,'',navmenuHeadings)
  })
}

///////////////////////////////////////////////////////
////////  EVENT LISTNER FUNCTION AREA DATABASE ///////
/////////////////////////////////////////////////////
function templateloading(ids,template){
//Ensure that the first load error is covered , also any other errors.
if(ids){
  jQuery.ajax({
   'async': true,
   'global': false,
   'url': '/templateload?ids='+ids+'&template='+template,
   'success': function (dataSchemaObject) {
     jQuery('#panel').html("")
     jQuery('#panel').html(dataSchemaObject)
   }
 });
}
}

//////////////////////////////////////
////////    PROGRESS BAR    /////////
////////////////////////////////////
function move() {
  var elem = document.getElementById("myBar");   
  elem.style.height = '5px'; 
  elem.style.background = '#4c8ffd'; 
  var width = 10;
  var id = setInterval(frame, 1);
  function frame() {
    if (width >= 100) {
      clearInterval(id);
      collapse()
    } else {
      width++; 
      elem.style.width = width + '%'; 
    }
  }
}

function collapse() {
  var elem = document.getElementById("myBar");   
  elem.style.background = 'white'; 
}

//////////////////////////////////////
////////    GET FORM BY ID  /////////
////////////////////////////////////
function newMenuItems(formdata,idItem,raw,parentid,injectParentid,headings){
  console.log(formdata,idItem,raw,parentid,injectParentid,headings)
  var headings = JSON.stringify(headings)
  jQuery.ajax({
    'url': '/getform?formdata='+formdata+'&idItem='+idItem+'&raw='+raw+'&parentid='+parentid+'&headings='+headings,
    'async': true,
    'global': false,
    'success': function (dataSchemaObject) {
      $('#formAreaModal').html(dataSchemaObject)
    }
  });
}
</script>

 